(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{323:function(t,a,s){t.exports=s.p+"assets/img/difference_flatten.f84c4c4b.png"},410:function(t,a,s){t.exports=s.p+"assets/img/flatten.71f0755d.png"},540:function(t,a,s){"use strict";s.r(a);var e=s(28),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("A modern JavaScript utility library delivering modularity, performance & extras.")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("lodash")]),t._v(" 是一个一致性、模块化、高性能的 "),e("code",[t._v("JavaScript")]),t._v(" 实用工具库")])]),t._v(" "),e("h1",{attrs:{id:"一、环境准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、环境准备"}},[t._v("#")]),t._v(" 一、环境准备")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("lodash")]),t._v(" 版本 "),e("code",[t._v("v4.0.0")])])]),t._v(" "),e("li",[e("p",[t._v("通过 "),e("code",[t._v("github1s")]),t._v(" 网页可以 "),e("a",{attrs:{href:"https://github1s.com/lodash/lodash/blob/HEAD/flatten.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看"),e("OutboundLink")],1),t._v(" "),e("code",[t._v("lodash - flatten")]),t._v(" 源码")])]),t._v(" "),e("li",[e("p",[t._v("调试测试用例可以 "),e("code",[t._v("clone")]),t._v(" 到本地")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/lodash/lodash.git\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" axios\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),e("h1",{attrs:{id:"二、结构分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、结构分析"}},[t._v("#")]),t._v(" 二、结构分析")]),t._v(" "),e("p",[e("img",{attrs:{src:s(410),alt:""}})]),t._v(" "),e("p",[t._v("  本篇主要讲述 "),e("code",[t._v("flatten")]),t._v(" 模块，包含 "),e("code",[t._v("getTag")]),t._v("、"),e("code",[t._v("isObjectLike")]),t._v("、"),e("code",[t._v("isArguments")]),t._v("、"),e("code",[t._v("isFlattenable")]),t._v("、"),e("code",[t._v("baseFlatten")]),t._v("。")]),t._v(" "),e("h1",{attrs:{id:"三、函数研读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、函数研读"}},[t._v("#")]),t._v(" 三、函数研读")]),t._v(" "),e("h2",{attrs:{id:"_1-internal-gettag-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-internal-gettag-模块"}},[t._v("#")]),t._v(" 1. internal/getTag 模块")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" toString "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Undefined]"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Null]"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" getTag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[t._v("使用非严格等 "),e("code",[t._v("==")]),t._v(" 无法判断 "),e("code",[t._v("value")]),t._v(" 是 "),e("code",[t._v("null")]),t._v(" or "),e("code",[t._v("undefined")])]),t._v(" "),e("li",[t._v("使用严格等 "),e("code",[t._v("===")]),t._v(" 判断 "),e("code",[t._v("value")]),t._v(" 是 "),e("code",[t._v("null")]),t._v(" or "),e("code",[t._v("undefined")]),t._v(" 并设定 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag",target:"_blank",rel:"noopener noreferrer"}},[t._v("toStringTag"),e("OutboundLink")],1),t._v("(准确的说应该是"),e("code",[t._v("Symbol.toStringTag")]),t._v(")")]),t._v(" "),e("li",[t._v("如果 "),e("code",[t._v("null")]),t._v(" or "),e("code",[t._v("undefined")]),t._v(" 直接使用 "),e("code",[t._v("Object")]),t._v(" 原型链函数 "),e("code",[t._v("toString()")]),t._v(" 获取 "),e("code",[t._v("toStringTag")])])]),t._v(" "),e("p",[t._v("Tips：许多内置的 "),e("code",[t._v("JavaScript")]),t._v(" 对象类型即便没有 "),e("code",[t._v("toStringTag")]),t._v(" 属性，也能被 "),e("code",[t._v("toString()")]),t._v(" 方法识别并返回特定的类型标签，比如："),e("code",[t._v('Object.prototype.toString.call([1, 2]); // "[object Array]"')]),t._v("，但是有些对象类型则不然，"),e("code",[t._v("toString()")]),t._v(" 方法能识别它们是因为"),e("code",[t._v("引擎")]),t._v("为它们设置好了 "),e("code",[t._v("toStringTag")]),t._v(" 标签，比如："),e("code",[t._v('Object.prototype.toString.call(new Map()); // "[object Map]"')])]),t._v(" "),e("h2",{attrs:{id:"_2-isobjectlike-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-isobjectlike-模块"}},[t._v("#")]),t._v(" 2. isObjectLike 模块")]),t._v(" "),e("p",[e("strong",[t._v("检查“value”是否与对象类似，如果不为空则是一个对象，并且会有一个“typeof”运算结果为“object”返回值")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * isObjectLike({})\n * // => true\n *\n * isObjectLike([1, 2, 3])\n * // => true\n *\n * isObjectLike(Function)\n * // => false\n *\n * isObjectLike(null)\n * // => false\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isObjectLike")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" isObjectLike\n\n")])])]),e("ul",[e("li",[t._v("可以通过 "),e("code",[t._v("typeof")]),t._v(" 来获取 "),e("code",[t._v("未经计算的操作数")]),t._v(" 的类型，下面是一个 "),e("code",[t._v("typeof")]),t._v(" 运算结果集")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("结果")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Undefined")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"undefined"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Null")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"object"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"boolean"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"number"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("BigInt(ECMAScript 2020 新增)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"bigint"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"string"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Symbol (ECMAScript 2015 新增)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"symbol"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("宿主对象（由 JS 环境提供）")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("取决于具体实现")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Function 对象 (按照 ECMA-262 规范实现 [[Call]])")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"function"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("其他任何对象")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v('"object"')])])])]),t._v(" "),e("h2",{attrs:{id:"_3-isarguments-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-isarguments-模块"}},[t._v("#")]),t._v(" 3. isArguments 模块")]),t._v(" "),e("p",[e("strong",[t._v("检查'value'是否与'arguments'对象类似")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" getTag "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./.internal/getTag.js'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" isObjectLike "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./isObjectLike.js'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object, else `false`.\n * @example\n *\n * isArguments(function() { return arguments }())\n * // => true\n *\n * isArguments([1, 2, 3])\n * // => false\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArguments")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isObjectLike")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[object Arguments]'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" isArguments\n")])])]),e("ul",[e("li",[e("code",[t._v("arguments")]),t._v(" 对象是所有（非箭头）函数中都可用的局部变量。你可以使用 "),e("code",[t._v("arguments")]),t._v(" 对象在函数中引用函数的参数。此对象包含传递给函数的每个参数，第一个参数在索引 "),e("code",[t._v("0")]),t._v(" 处。")]),t._v(" "),e("li",[t._v("需要注意的是，"),e("code",[t._v("arguments")]),t._v(" 对象不是一个 "),e("code",[t._v("Array")]),t._v("，它类似于 "),e("code",[t._v("Array")]),t._v("，但除了 "),e("code",[t._v("length")]),t._v(" 属性和索引元素之外没有任何 "),e("code",[t._v("Array")]),t._v(" 属性。例如，它没有 "),e("code",[t._v("pop")]),t._v(" 方法。")]),t._v(" "),e("li",[e("code",[t._v("arguments")]),t._v(" 对象只能在函数内使用，对其使用 "),e("code",[t._v("Object.prototype.toString.call(arguments)")]),t._v(" 运算的返回值是 "),e("code",[t._v("[object Arguments]")])])]),t._v(" "),e("p",[e("img",{attrs:{src:s(323),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_4-isflattenable-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-isflattenable-模块"}},[t._v("#")]),t._v(" 4. isFlattenable 模块")]),t._v(" "),e("p",[e("strong",[t._v("检查'value'是否为可展平的'arguments'对象或数组")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" isArguments "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../isArguments.js'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Built-in value reference. */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spreadableSymbol "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Symbol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isConcatSpreadable\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFlattenable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArguments")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("spreadableSymbol"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" isFlattenable\n")])])]),e("ul",[e("li",[t._v("重点关注 "),e("code",[t._v("value[spreadableSymbol]")]),t._v("，在这之前我们需要知道 "),e("code",[t._v("Array")]),t._v(" 的 "),e("code",[t._v("concat")]),t._v(" 运算，正常情况下 "),e("code",[t._v("['a', 'b', 'c'].concat([1, 2, 3]) = [\"a\", \"b\", \"c\", 1, 2, 3]")]),t._v("，但可通过设定被连接 "),e("code",[t._v("array")]),t._v("，"),e("code",[t._v("array[Symbol.isConcatSpreadable] = false;")]),t._v("，使得 "),e("code",[t._v("array")]),t._v(" 不被展开到发起连接的 "),e("code",[t._v("array")]),t._v(" 而是作为一个元素连接到其中，如 "),e("code",[t._v("['a', 'b', 'c'].concat([1, 2, 3]) = [\"a\", \"b\", \"c\", [ 1, 2, 3] ]")])]),t._v(" "),e("li",[t._v("前文介绍过 "),e("code",[t._v("!!")]),t._v(" 运算符表示逻辑非的取反运算，如"),e("code",[t._v("!!obj")]),t._v("与 "),e("code",[t._v('obj != null && typeof obj === undefined && obj != "" && obj != false')]),t._v(" 在计算上等价")])]),t._v(" "),e("h2",{attrs:{id:"_5-baseflatten-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-baseflatten-模块"}},[t._v("#")]),t._v(" 5. baseFlatten 模块")]),t._v(" "),e("p",[e("strong",[t._v("扁平化”的基本实现，支持限制扁平化")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" isFlattenable "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./isFlattenable.js'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth 最大递归深度\n * @param {boolean} [predicate=isFlattenable] 每次迭代调用的函数\n * @param {boolean} [isStrict] 限制为通过“谓词”检查的值\n * @param {Array} [result=[]] 初始结果值\n * @returns {Array} 返回新的展平数组\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseFlatten")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" depth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" predicate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isStrict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  predicate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("predicate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" isFlattenable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("depth "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("predicate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("depth "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归展平阵列（易受调用堆栈限制的影响）")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseFlatten")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" depth "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" predicate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isStrict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isStrict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" baseFlatten\n\n")])])]),e("ul",[e("li",[t._v("如果待展平数组 "),e("code",[t._v("array")]),t._v(" 是 "),e("code",[t._v("null")]),t._v("，直接返回 "),e("code",[t._v("result")]),t._v(" (result=[])")]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("for...of")]),t._v(" 迭代待展平 "),e("code",[t._v("array")]),t._v(" 中的每一项，如果最大递归深度  "),e("code",[t._v("depth")]),t._v(" 仍然未减至 "),e("code",[t._v("1")]),t._v(" 则递归调用 "),e("code",[t._v("baseFlatten")]),t._v("，每次"),e("code",[t._v("depth - 1")]),t._v("，直至 "),e("code",[t._v("depth = 1")]),t._v(" 将返回值放入 "),e("code",[t._v("result")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("depth = 1")]),t._v(" 时由于所有项都已展平 "),e("code",[t._v("predicate(value)")]),t._v(" 返回 "),e("code",[t._v("false")]),t._v("，进入 "),e("code",[t._v("else if (!isStrict)")]),t._v(" 语句块，目的是限制“谓词”展平到"),e("code",[t._v("result")]),t._v("，这里我们就需要了解谓词的概念了")]),t._v(" "),e("li",[t._v("谓词是一个可调用的表达式，其返回结果是一个能用作条件的值。通俗的说就是一个函数，会返回一个符合该条件(“truthy值”)的数组🐶")])]),t._v(" "),e("h2",{attrs:{id:"_6-flatten-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-flatten-模块"}},[t._v("#")]),t._v(" 6. flatten 模块")]),t._v(" "),e("p",[e("strong",[t._v("减少一级array嵌套深度")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" baseFlatten "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./.internal/baseFlatten.js'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @since 0.1.0\n * @category Array\n * @param {Array} array 需要减少嵌套层级的数组\n * @returns {Array} 返回减少嵌套层级后的新数组\n * @see flatMap, flatMapDeep, flatMapDepth, flattenDeep, flattenDepth\n * @example\n *\n * flatten([1, [2, [3, [4]], 5]])\n * // => [1, 2, [3, [4]], 5]\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("array")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseFlatten")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" flatten\n")])])]),e("ul",[e("li",[t._v("使用非严格等 "),e("code",[t._v("==")]),t._v(" 判断 "),e("code",[t._v("array")]),t._v(" 是 "),e("code",[t._v("null")]),t._v(" or "),e("code",[t._v("undefined")]),t._v("，如果是返回空数组，否则取 "),e("code",[t._v("array.length")])]),t._v(" "),e("li",[t._v("如果 "),e("code",[t._v("array")]),t._v(" 不是空数组，调用 "),e("code",[t._v("baseFlatten(array, 1)")]),t._v(" 减少一层嵌套层级并返回，否则直接返回空数组")])])])}),[],!1,null,null,null);a.default=n.exports}}]);