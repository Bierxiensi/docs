(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{610:function(t,s,a){"use strict";a.r(s);var e=a(28),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前置知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[t._v("#")]),t._v(" 前置知识")]),t._v(" "),a("blockquote",[a("p",[t._v("今日 【middle - 5.return-type】")])]),t._v(" "),a("p",[t._v("在这之前需要掌握一点Ts基础知识，可以参考学习记录"),a("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[数据类型]")]),t._v("、"),a("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[类和接口]")]),t._v("、"),a("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[枚举和泛型]")]),t._v("、"),a("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[类型别名]")])],1),t._v(" "),a("h1",{attrs:{id:"二、题目分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、题目分析"}},[t._v("#")]),t._v(" 二、题目分析")]),t._v(" "),a("h2",{attrs:{id:"return-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#return-type"}},[t._v("#")]),t._v(" return-type")]),t._v(" "),a("p",[a("strong",[t._v("实现 TypeScript 的 ReturnType"),a("T",[t._v(" 泛型")])],1)]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("type MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" any\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* _____________ 测试用例 _____________ */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Equal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Expect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@type-challenges/utils'")]),t._v("\n\ntype cases "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ComplexObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ComplexObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Promise"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Promise"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyReturnType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" fn1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\ntype ComplexObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("v")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("v")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("w")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("ul",[a("li",[t._v("首先可以确定的是返回的是泛型函数 "),a("code",[t._v("() => type")]),t._v("，对于其中的含参情况要做泛型处理即 "),a("code",[t._v("(...arguments: any[]) => type")]),t._v("，其中 "),a("code",[t._v("...arguments")]),t._v("称之为 "),a("code",[t._v("类数组类型")]),t._v(" ，是一个对应于传递给函数的参数的类数组对象，可以参考 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN-Arguments"),a("OutboundLink")],1),t._v("，由于无法确定参数类型，这里使用 "),a("code",[t._v("any")]),t._v(" 类型")]),t._v(" "),a("li",[t._v("为了返回正确的 "),a("code",[t._v("arguments")]),t._v(" 类型，需要逐一对之进行类型匹配，这样的过程通常被称为 "),a("code",[t._v("模式匹配")]),t._v("， 一个常见的模式匹配如下 "),a("code",[t._v("type GetValueType<P> = P extends Promise<infer Value> ? Value : never;")]),t._v("， "),a("a",{attrs:{href:"https://juejin.cn/book/7047524421182947366/section/7048281581428932619",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过 extends 对传入的类型参数 P 做模式匹配，其中值的类型是需要提取的，通过 infer 声明一个局部变量 Value 来保存，如果匹配，就返回匹配到的 Value，否则就返回 never 代表没匹配到。"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("由于 "),a("code",[t._v("arguments")]),t._v(" 是 "),a("code",[t._v("类数组")]),t._v("，这里需要使用数组类型的模式匹配 "),a("code",[t._v("type MyReturnType<T extends any[]> = T extends (...args: any[]) => type ? type : never")])]),t._v(" "),a("li",[t._v("经过前述分析我们知道 "),a("code",[t._v("类数组 arguments")]),t._v(" 中值的类型是需要提取的，需要通过 infer 声明一个局部变量来保存，所以最终得到 "),a("code",[t._v("type MyReturnType<T extends any[]> = T extends (...args: any[]) => infer type ? type : never")])])]),t._v(" "),a("p",[t._v("Tips：关于 "),a("code",[t._v("模式匹配")]),t._v(" 这点的细节可以参考"),a("a",{attrs:{href:"https://juejin.cn/user/2788017216685118",target:"_blank",rel:"noopener noreferrer"}},[t._v("神说要有光"),a("OutboundLink")],1),t._v(" 的掘金小册")])])}),[],!1,null,null,null);s.default=r.exports}}]);