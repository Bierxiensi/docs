(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{436:function(e,t,s){"use strict";s.r(t);var a=s(28),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),s("blockquote",[s("p",[e._v("Nest (NestJS) 是一个用于构建高效、可扩展的 Node.js 服务器端应用程序的开发框架，"),s("a",{attrs:{href:"https://nestjs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("提供了一个开箱即用的应用程序体系结构"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("h3",{attrs:{id:"安装与运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装与运行"}},[e._v("#")]),e._v(" 安装与运行")]),e._v(" "),s("h4",{attrs:{id:"_1-前置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-前置"}},[e._v("#")]),e._v(" 1. 前置")]),e._v(" "),s("ul",[s("li",[e._v("node")]),e._v(" "),s("li",[e._v("npm包管理工具")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i -g @nestjs/cli\nnest new project-name\nnpm run start\n")])])]),s("h4",{attrs:{id:"_2-启动效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动效果"}},[e._v("#")]),e._v(" 2. 启动效果")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/nest_run_20210617.png",width:"780",height:"140"}})]),e._v(" "),s("p",[e._v("入口/get")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/nest_run_hello_20210617.png",width:"480",height:"140"}})]),e._v(" "),s("h3",{attrs:{id:"起步使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#起步使用"}},[e._v("#")]),e._v(" 起步使用")]),e._v(" "),s("h4",{attrs:{id:"_1-项目结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-项目结构"}},[e._v("#")]),e._v(" 1. 项目结构")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/nest_struct_20210617.png",width:"480",height:"280"}})]),e._v(" "),s("ul",[s("li",[e._v("main.ts：应用程序入口，使用核心函数 NestFactory 来创建 Nest 应用程序的实例。")]),e._v(" "),s("li",[e._v("app.service.ts：service层，具有单一方法的基本服务（service）method")]),e._v(" "),s("li",[e._v("app.controller.ts：controller层，带有单个路由的基本控制器")]),e._v(" "),s("li",[e._v("app.model.ts：model层，T应用程序的根模块（root module）")]),e._v(" "),s("li",[e._v("app.controller.spec.ts：单元测试层")])]),e._v(" "),s("h4",{attrs:{id:"_2-分层分析-main-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-分层分析-main-ts"}},[e._v("#")]),e._v(" 2. 分层分析 - main.ts")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/main_20210617.png",width:"480",height:"280"}})]),e._v(" "),s("ul",[s("li",[e._v("定义了异步函数bootstrap，引导应用程序的启动过程")]),e._v(" "),s("li",[e._v("使用了 NestFactory 核心类创建了一个 Nest 应用程序的实例")]),e._v(" "),s("li",[e._v("NestFactory 暴露了一些静态方法用于创建应用程序的实例。其中，create() 方法返回一个应用程序的对象")]),e._v(" "),s("li",[e._v("app实例监听3000端口")])]),e._v(" "),s("h4",{attrs:{id:"_3-分层分析-app-service-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-分层分析-app-service-ts"}},[e._v("#")]),e._v(" 3. 分层分析 - app.service.ts")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/service_20210617.png",width:"480",height:"280"}})]),e._v(" "),s("ul",[s("li",[e._v("定义了一个函数getHello()并导出为AppService")]),e._v(" "),s("li",[e._v("使用"),s("a",{attrs:{href:"https://nestjs.bootcss.com/components",target:"_blank",rel:"noopener noreferrer"}},[e._v("@Injectable"),s("OutboundLink")],1),e._v("（can be managed by the Nest IoC container）装饰器装饰Appservice")])]),e._v(" "),s("h4",{attrs:{id:"_4-分层分析-app-controller-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-分层分析-app-controller-ts"}},[e._v("#")]),e._v(" 4. 分层分析 - app.controller.ts")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/controller_20210617.png",width:"480",height:"280"}})]),e._v(" "),s("ul",[s("li",[e._v("消费了AppServie，返回值为AppServie中getHello()的返回值")]),e._v(" "),s("li",[e._v("定义了一个函数并导出为AppController")]),e._v(" "),s("li",[e._v("使用"),s("a",{attrs:{href:"https://nestjs.bootcss.com/controllers",target:"_blank",rel:"noopener noreferrer"}},[e._v("@Controller"),s("OutboundLink")],1),e._v("（allows us to easily group a set of related routes, and minimize repetitive code.）装饰器装饰AppController")]),e._v(" "),s("li",[e._v("使用"),s("a",{attrs:{href:"https://nestjs.bootcss.com/controllers",target:"_blank",rel:"noopener noreferrer"}},[e._v("@get"),s("OutboundLink")],1),e._v("(tells Nest to create a handler for a specific endpoint for HTTP requests. )装饰器装饰函数getHello,这里可以自己规定请求入口")])]),e._v(" "),s("h4",{attrs:{id:"_5-分层分析-app-model-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-分层分析-app-model-ts"}},[e._v("#")]),e._v(" 5. 分层分析 - app.model.ts")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/module_20210617.png",width:"480",height:"280"}})]),e._v(" "),s("p",[e._v("创建一个AppModel关联service和controller，使用@Modal装饰器装饰，此model即为根model，在入口文件处导入即可。")]),e._v(" "),s("ul",[s("li",[e._v("A feature module simply organizes code relevant for a specific feature, keeping code organized and establishing clear boundaries")]),e._v(" "),s("li",[e._v("Each application has at least one module, a root module.")]),e._v(" "),s("li",[e._v("The @Module() decorator takes a single object describe the module.")]),e._v(" "),s("li",[e._v("The last thing we need to do is import this module into the root module (the AppModule, defined in the app.module.ts file).")])]),e._v(" "),s("h4",{attrs:{id:"_6-分层分析-dto-自建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-分层分析-dto-自建"}},[e._v("#")]),e._v(" 6. 分层分析 - dto（自建）")]),e._v(" "),s("p",[e._v("数据验证(格式、非空),安装class-validator")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i --save class-validator class-transformer\n")])])]),s("p",[e._v("......")]),e._v(" "),s("h2",{attrs:{id:"简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),s("blockquote",[s("p",[e._v("Nest (NestJS) 是一个用于构建高效、可扩展的 Node.js 服务器端应用程序的开发框架，"),s("a",{attrs:{href:"https://nestjs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("提供了一个开箱即用的应用程序体系结构"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("h2",{attrs:{id:"前置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置"}},[e._v("#")]),e._v(" 前置")]),e._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"http://wiki.bianjie.ai/pages/viewpage.action?pageId=50108482",target:"_blank",rel:"noopener noreferrer"}},[e._v("一个创建好的nest框架"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"模块导航"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块导航"}},[e._v("#")]),e._v(" 模块导航")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#Modules"}},[e._v("1.Modules")]),e._v("\t\t\t\t\t\t\t\t\t\t--OK")]),e._v(" "),s("li",[s("a",{attrs:{href:"#Controllers"}},[e._v("2.Controllers")]),e._v("\t\t\t\t\t\t\t\t--OK\n"),s("ul",[s("li",[s("a",{attrs:{href:"#nest-swagger"}},[e._v("nest-swagger")]),e._v("\t\t\t\t\t\t\t--OK")])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#Providers"}},[e._v("3.Providers")]),e._v("\t\t\t\t\t\t\t\t\t--writing...")]),e._v(" "),s("li",[s("a",{attrs:{href:"#Middleware"}},[e._v("4.Middleware")]),e._v("\t\t\t\t\t\t\t\t\t--OK")]),e._v(" "),s("li",[s("a",{attrs:{href:"#Pipes"}},[e._v("5.Pipes")]),e._v("\t\t\t\t\t\t\t\t\t\t\t--learning...")])]),e._v(" "),s("h3",{attrs:{id:"_1-modules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-modules"}},[e._v("#")]),e._v(" 1. "),s("span",{attrs:{id:"Modules"}},[e._v("Modules")])]),e._v(" "),s("blockquote",[s("p",[e._v("a class annotated with a @Module() decorator\nThe @Module() decorator provides metadata that Nest makes use of to organize the application structure.")])]),e._v(" "),s("p",[e._v("Modules，即组织层，职责是组织相关模块")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://docs.nestjs.com/assets/Modules_1.png",height:"420",width:"920"}})]),e._v(" "),s("p",[e._v("@Module()装饰器接受一个对象，其属性描述了该模块，属性分别是:")]),e._v(" "),s("ul",[s("li",[e._v("providers\n提供商，提供了service服务")]),e._v(" "),s("li",[e._v("controllers\n控制器，提供了控制器集合")]),e._v(" "),s("li",[e._v("imports\n依赖注入")]),e._v(" "),s("li",[e._v("exports\n模块导出")])]),e._v(" "),s("h3",{attrs:{id:"_2-controllers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-controllers"}},[e._v("#")]),e._v(" 2. "),s("span",{attrs:{id:"Controllers"}},[e._v("Controllers")])]),e._v(" "),s("blockquote",[s("p",[e._v("Controllers are responsible for handling incoming requests and returning responses to the client.\nFrequently, each controller has more than one route, and different routes can perform different actions.")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/Controllers_20210617.png",height:"420",width:"920"}})]),e._v(" "),s("p",[e._v("Controllers，即控制层，职责是接收客户端请求并发送结果给对方。")]),e._v(" "),s("ul",[s("li",[e._v("Routing\n在@Controller()指定路由前缀,@Get()指定方法入口")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import { Controller, Get } from '@nestjs/common';\n\n@Controller('/hello')\nexport class CatsController {\n  @Get('/get')\n  getHello() {\n    return 'hello';\n  }\n}\n")])])]),s("ul",[s("li",[e._v("Request object\n@Req()装饰器，指示Nest注入请求对象，从而访问请求对象。")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import { Controller, Bind, Get, Req } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Get()\n  @Bind(Req())\n  findAll(request) {\n    return 'This action returns all cats';\n  }\n}\n")])])]),s("ul",[s("li",[e._v("Resources\n@Post()创建新资源")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import { Controller, Post } from '@nestjs/common';\n\n@Controller('/hello')\nexport class CatsController {\n  @Post()\n  create(): string {\n    return 'This action adds a new cat';\n  }\n}\n")])])]),s("ul",[s("li",[e._v("Route wildcards\n字符?、+、*和()可以在路由路径中使用，它们是正则表达式对应的子集，匹配符合规则的路由。")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Get('ab*cd')\nfindAll() {\n  return 'This route uses a wildcard';\n}\n")])])]),s("ul",[s("li",[e._v("Status code\n@HttpCode()设定响应状态码")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Post()\n@HttpCode(204)\ncreate() {\n  return 'This action adds a new cat';\n}\n")])])]),s("ul",[s("li",[e._v("Header\n@Header()自定义响应头")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Post()\n@Header('Cache-Control', 'none')\ncreate() {\n  return 'This action adds a new cat';\n}\n")])])]),s("ul",[s("li",[e._v("Redirection\n@Redirect()请求重定向")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Get()\n@Redirect('https://nestjs.com', 301)\n")])])]),s("ul",[s("li",[e._v("Route parameters\n@Param()接收URL中的参数")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Get(':id')\n@Bind(Param())\nfindOne(params) {\n  console.log(params.id);\n  return `This action returns a #${params.id} cat`;\n}\n")])])]),s("p",[e._v("Express写法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Get(':id')\nfindOne(@Param() params): string {\n  console.log(params.id);\n  return `This action returns a #${params.id} cat`;\n}\n")])])]),s("p",[e._v("通过名称直接引用路由参数")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@@filename()\n@Get(':id')\nfindOne(@Param('id') id: string): string {\n  return `This action returns a #${id} cat`;\n}\n@@switch\n@Get(':id')\n@Bind(Param('id'))\nfindOne(id) {\n  return `This action returns a #${id} cat`;\n}\n")])])]),s("ul",[s("li",[e._v("Sub-Domain Routing\n@Controller装饰器可以采用一个主机选项来要求传入请求的HTTP主机匹配某个特定的值。")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Controller({ host: 'admin.example.com' })\nexport class AdminController {\n  @Get()\n  index(): string {\n    return 'Admin page';\n  }\n}\n")])])]),s("ul",[s("li",[e._v("Scopes")])]),e._v(" "),s("p",[e._v("...")]),e._v(" "),s("ul",[s("li",[e._v("Asynchronicity\n支持异步,返回p、Promise()")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Get()\nasync findAll(): Promise<any[]> {\n  return [];\n}\n@Get()\nasync findAll() {\n  return [];\n}\n")])])]),s("ul",[s("li",[e._v("Request payloads\n@Body()接收post请求参数，需先创建DTO")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export class CreateCatDto {\n  name: string;\n  age: number;\n  breed: string;\n}\n\n\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  return 'This action adds a new cat';\n}\n")])])]),s("ul",[s("li",[e._v("Handling errors\n"),s("a",{attrs:{href:"https://nestjs.bootcss.com/exception-filters",target:"_blank",rel:"noopener noreferrer"}},[e._v("错误处理"),s("OutboundLink")],1)])]),e._v(" "),s("h5",{attrs:{id:"nest-swagger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nest-swagger"}},[e._v("#")]),e._v(" "),s("span",{attrs:{id:"nest-swagger"}},[e._v("nest-swagger")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://docs.nestjs.com/openapi/introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装nest-swagger"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  npm install --save @nestjs/swagger swagger-ui-express\n\n")])])]),s("p",[e._v("引入swagger包")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n")])])]),s("p",[e._v("进行信息项配置")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  // swagger配置\n  const swaggerOptions = new DocumentBuilder()\n    .setTitle('nest-swagger') \n    .setDescription('zxy-learning')\n    .setVersion('1.0')\n    .addBasicAuth()\n    .build();\n\n  const document = SwaggerModule.createDocument(app, swaggerOptions);\n  SwaggerModule.setup('doc', app, document);\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/swagger_20210617.png",height:"670",width:"1620"}})]),e._v(" "),s("h3",{attrs:{id:"_3-providers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-providers"}},[e._v("#")]),e._v(" 3. "),s("span",{attrs:{id:"Providers"}},[e._v("Providers")])]),e._v(" "),s("blockquote",[s("p",[e._v("Many of the basic Nest classes may be treated as a provider – services, repositories, factories, helpers, and so on.\nIt can inject dependencies.")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Bierxiensi/CDN/server/nest/provides_20210617.png",height:"420",width:"720"}})]),e._v(" "),s("p",[e._v("Providers即提供者，可以注入依赖项，服务、存储库、工厂、帮助程序等都可以被视为提供者。如控制器Controllers应该处理HTTP请求，并将更复杂的任务委托给提供者。")]),e._v(" "),s("ul",[s("li",[e._v("Services")])]),e._v(" "),s("h3",{attrs:{id:"_4-middleware"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-middleware"}},[e._v("#")]),e._v(" 4. "),s("span",{attrs:{id:"Middleware"}},[e._v("Middleware")])]),e._v(" "),s("blockquote",[s("p",[e._v("a function which is called before the route handler.")])]),e._v(" "),s("p",[e._v("中间件，在请求前使用中间件进行相关处理")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://nestjs.bootcss.com/assets/Middlewares_1.png",height:"420",width:"720"}})]),e._v(" "),s("ul",[s("li",[e._v("实现自NestMiddleware")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import { NestMiddleware } from '@nestjs/common';\n\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    next();\n  }\n}\n")])])]),s("ul",[s("li",[e._v("Applying middleware")])]),e._v(" "),s("p",[e._v("全局注册LoggerMiddleware,全局匹配路由cats")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const app = await NestFactory.create(AppModule);\napp.use(logger);\n")])])]),s("p",[e._v("局部注册helloMiddleware")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import { Module, RequestMethod } from '@nestjs/common';\nimport { helloMiddleware } from './common/middleware/hello.middleware';\n\n\nexport class helloModule {\n  configure(consumer) {\n    consumer\n      .apply(helloMiddleware)\n      .forRoutes('cats');\n  }\n}\n")])])]),s("ul",[s("li",[e._v("Route wildcards")])]),e._v(" "),s("p",[e._v("支持基于模式的路由。字符?、+、*和()可以在路由路径中使用，它们是正则表达式对应的子集，匹配符合规则的路由。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("forRoutes({ path: 'ab*cd', method: RequestMethod.ALL });\n")])])]),s("ul",[s("li",[e._v("Excluding routes")])]),e._v(" "),s("p",[e._v("exclude()方法排除某些路由以避免使用中间件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("consumer\n  .apply(LoggerMiddleware)\n  .exclude(\n    { path: 'cats', method: RequestMethod.GET },\n    { path: 'cats', method: RequestMethod.POST }\n  )\n  .forRoutes(CatsController);\n")])])]),s("h3",{attrs:{id:"_5-pipes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-pipes"}},[e._v("#")]),e._v(" 5. "),s("span",{attrs:{id:"Pipes"}},[e._v("Pipes")])]),e._v(" "),s("p",[e._v("......")])])}),[],!1,null,null,null);t.default=r.exports}}]);