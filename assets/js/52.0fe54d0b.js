(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{442:function(t,a,v){"use strict";v.r(a);var _=v(28),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),v("h3",{attrs:{id:"特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),v("ol",[v("li",[t._v("语言简洁紧凑，使用灵活，")]),t._v(" "),v("li",[t._v("运算符多")]),t._v(" "),v("li",[t._v("类型丰富，包含整形、字符型、浮点型，共用体，结构体等")]),t._v(" "),v("li",[t._v("结构化")]),t._v(" "),v("li"),t._v(" "),v("li",[v("code",[t._v("可以直接访问物理地址")])]),t._v(" "),v("li",[t._v("移植性好")]),t._v(" "),v("li")]),t._v(" "),v("h3",{attrs:{id:"开始"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),v("p",[t._v("预处理指令: #include<stdio.h>\n函数入口: main函数，一般返回值是int类型，搭配return 0\n注释: 单行注释/ 多行注释 /**/\n变量声明:\n变量赋值:\n换行: printf('/n');")]),t._v(" "),v("h2",{attrs:{id:"putc-putchar"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#putc-putchar"}},[t._v("#")]),t._v(" putc/ putchar")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("putchar: 传入一个0-127的整数(若传入浮点数将会按整数处理)，则会向屏幕输出一个对应该数字的字符")])]),t._v(" "),v("li",[v("p",[t._v("putc: 比putchar更强大一点，putc的第一个参数是数字，第二个参数是文件指针，可以将字符打印到对应的文件中，而不是像putchar一样只能打印到屏幕上；因此putchar的第二个参数是stdout时和putchar函数是等效的")])]),t._v(" "),v("li",[v("p",[t._v("puts:")])])]),t._v(" "),v("p",[t._v("eg:\nputchar('a') //结果是在屏幕上打印出字符 a")]),t._v(" "),v("p",[t._v("putchar(97) //结果是在屏幕上打印出字符 a")]),t._v(" "),v("p",[t._v("putc('a',stdout)  //结果是在屏幕上打印出字符 a")]),t._v(" "),v("p",[t._v("putc(97,stdout)  //结果是在屏幕上打印出字符 a")]),t._v(" "),v("p",[t._v('FILE * FP = fopen("C:\\test.txt","w")')]),t._v(" "),v("p",[t._v("putc('a',fp)  //结果是在C盘的test.txt文件中打印出字符 a")]),t._v(" "),v("p",[t._v("puts(str)  // str是字符指针变量名、字符数组名/字符串常量")])])}),[],!1,null,null,null);a.default=r.exports}}]);