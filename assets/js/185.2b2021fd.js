(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{609:function(t,e,s){"use strict";s.r(e);var a=s(28),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"一、前置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、前置"}},[t._v("#")]),t._v(" 一、前置")]),t._v(" "),s("p",[s("a",{attrs:{href:"./../image/TSChallenge1.png"}})]),t._v(" "),s("blockquote",[s("p",[t._v("今日level 【easy 4・实现 Pick】")])]),t._v(" "),s("p",[t._v("在这之前需要掌握一点Ts基础知识，可以参考学习记录"),s("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[数据类型]")]),t._v("、"),s("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[类和接口]")]),t._v("、"),s("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[枚举和泛型]")]),t._v("、"),s("RouterLink",{attrs:{to:"/Web/TypeScript/typescript1.html"}},[t._v("TypeScript学习记录-[类型别名]")]),t._v("，关于Playground如何使用、如何刷题可以参考"),s("RouterLink",{attrs:{to:"/Web/TypeScript/tsChallenges/tsChallenge1.html"}},[t._v("TypeScript学习记录-[ts-challenge-Hello World]")])],1),t._v(" "),s("h1",{attrs:{id:"二、题目分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、题目分析"}},[t._v("#")]),t._v(" 二、题目分析")]),t._v(" "),s("p",[s("strong",[t._v("实现 TS 内置的 Pick<T, K>，但不可以使用它。从类型 T 中选择出属性 K，构造成一个新的类型")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* _____________ Your Code Here _____________ */")]),t._v("\n\ntype MyPick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" any\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* _____________ Test Cases _____________ */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" type "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Equal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Expect "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@type-challenges/utils'")]),t._v("\n\ntype cases "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  Expect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Expected1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyPick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Expect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Equal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Expected2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyPick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'completed'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ts-expect-error")]),t._v("\n  MyPick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'completed'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'invalid'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Todo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("completed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Expected1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Expected2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("completed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("首先可以确定的是返回类型是至少包含"),s("code",[t._v("title: string")]),t._v("、"),s("code",[t._v("description: string")]),t._v("、"),s("code",[t._v("completed: boolean")]),t._v(" 三者之一键值对的 "),s("code",[t._v("object")]),t._v(" ，即 "),s("code",[t._v("type MyPick<T, K> = { key：value }")])]),t._v(" "),s("p",[t._v("接下来需要确认 "),s("code",[t._v("object")]),t._v(" 内部的 "),s("code",[t._v("key")]),t._v("、"),s("code",[t._v("value")]),t._v("，我们知道 "),s("code",[t._v("key")]),t._v(" 取自泛型 "),s("code",[t._v("K")]),t._v("，"),s("code",[t._v("value")]),t._v(" 取自泛型 "),s("code",[t._v("T")]),t._v(" 中 键 "),s("code",[t._v("key")]),t._v(" 的键值，那么就有"),s("code",[t._v("type MyPick<T, K> = { [U in K]: T[U] }")]),t._v("，这里使用的 "),s("code",[t._v("in")]),t._v(" 是用于遍历联合类型的运算符")]),t._v(" "),s("p",[s("a",{attrs:{href:"./../image/TSChallenge2.1.png"}})]),t._v(" "),s("p",[t._v("验证一下会发现有如下错误 "),s("code",[t._v("Type 'K' is not assignable to type 'string | number | symbol'.(2322)")]),t._v("，需要对泛型 "),s("code",[t._v("K")]),t._v(" 进行约束，保证他的类型是 "),s("code",[t._v("string | number | symbol")]),t._v("，我们可以建立一个新的类型 "),s("code",[t._v("type Itype = string | number | symbol;")]),t._v(" 让泛型 "),s("code",[t._v("K")]),t._v(" 继承自它")]),t._v(" "),s("p",[s("a",{attrs:{href:"./../image/TSChallenge2.2.png"}})]),t._v(" "),s("p",[t._v("验证一下会发现有如下错误 "),s("code",[t._v("Type 'U' cannot be used to index type 'T'.(2536)")]),t._v("，在对泛型 "),s("code",[t._v("K")]),t._v(" 进行约束，保证他的类型是 "),s("code",[t._v("string | number | symbol")]),t._v(" 时，进行 "),s("code",[t._v("value")]),t._v(" 取值发现泛型 "),s("code",[t._v("T")]),t._v(" 识别不了类型 "),s("code",[t._v("U")]),t._v("，考虑让泛型 "),s("code",[t._v("K")]),t._v(" 继承泛型 "),s("code",[t._v("T")]),t._v(" 的键值类型，这里使用索引查询 "),s("code",[t._v("keyof")]),t._v(" 索引泛型 "),s("code",[t._v("T")]),t._v(" 的键值，并让泛型 "),s("code",[t._v("K")]),t._v(" 继承")]),t._v(" "),s("p",[s("a",{attrs:{href:"./../image/TSChallenge2.3.png"}})]),t._v(" "),s("p",[t._v("Tips：关于 "),s("code",[t._v("Expect")]),t._v("、"),s("code",[t._v("Equal")]),t._v(" 已在前文"),s("RouterLink",{attrs:{to:"/Web/TypeScript/tsChallenges/tsChallenge1.html"}},[t._v("TypeScript学习记录-[ts-challenge-Hello World]")]),t._v("说明，这里不做赘述")],1)])}),[],!1,null,null,null);e.default=r.exports}}]);