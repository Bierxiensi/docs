(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{322:function(a,t,s){a.exports=s.p+"assets/img/difference_relation.969a6710.jpg"},530:function(a,t,s){"use strict";s.r(t);var e=s(28),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("blockquote",[e("p",[a._v("A modern JavaScript utility library delivering modularity, performance & extras.")])]),a._v(" "),e("blockquote",[e("p",[e("code",[a._v("lodash")]),a._v(" 是一个一致性、模块化、高性能的 "),e("code",[a._v("JavaScript")]),a._v(" 实用工具库")])]),a._v(" "),e("h1",{attrs:{id:"一、环境准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、环境准备"}},[a._v("#")]),a._v(" 一、环境准备")]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("lodash")]),a._v(" 版本 "),e("code",[a._v("v4.0.0")])])]),a._v(" "),e("li",[e("p",[a._v("通过 "),e("code",[a._v("github1s")]),a._v(" 网页可以 "),e("a",{attrs:{href:"https://github1s.com/lodash/lodash/blob/HEAD/difference.js",target:"_blank",rel:"noopener noreferrer"}},[a._v("查看"),e("OutboundLink")],1),a._v(" "),e("code",[a._v("lodash - difference")]),a._v(" 源码")])]),a._v(" "),e("li",[e("p",[a._v("调试测试用例可以 "),e("code",[a._v("clone")]),a._v(" 到本地")])])]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/lodash/lodash.git\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" axios\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),e("h1",{attrs:{id:"二、结构分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、结构分析"}},[a._v("#")]),a._v(" 二、结构分析")]),a._v(" "),e("p",[e("img",{attrs:{src:s(322),alt:""}})]),a._v(" "),e("p",[a._v("  这是一张 "),e("code",[a._v("difference")]),a._v(" 依赖引用路径图，相对复杂一些，按照功能划分，大致包括cache模块、index模块和flatten模块。接下来会自底向上分析各个依赖模块。由于依赖较多，篇幅较长，将按照模块分成四个部分，本篇主要讲述 "),e("code",[a._v("Index")]),a._v(" 模块，包含 "),e("code",[a._v("arrayIncludes")]),a._v("、"),e("code",[a._v("baseIndexOf")]),a._v("、"),e("code",[a._v("baseFindIndex")]),a._v("、"),e("code",[a._v("baseIsNaN")]),a._v("、"),e("code",[a._v("strictIndexOf")]),a._v("。")]),a._v(" "),e("h1",{attrs:{id:"三、函数研读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、函数研读"}},[a._v("#")]),a._v(" 三、函数研读")]),a._v(" "),e("h2",{attrs:{id:"_1-strictindexof-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-strictindexof-模块"}},[a._v("#")]),a._v(" 1. strictIndexOf 模块")]),a._v(" "),e("p",[e("strong",[a._v("indexOf的一个特殊版本，它执行严格的相等用于比较value，比如"),e("code",[a._v("===")])])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("strictIndexOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fromIndex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" index "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fromIndex "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" length "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" array\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("index "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" index\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" strictIndexOf\n")])])]),e("ul",[e("li",[a._v("重点关注"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Strict_equality",target:"_blank",rel:"noopener noreferrer"}},[a._v("MDN - Strict equality (===)"),e("OutboundLink")],1),a._v("，全等运算符与相等运算符 "),e("code",[a._v("==")]),a._v(" 最显著的区别是，如果操作数的类型不同，"),e("code",[a._v("==")]),a._v(" 运算符会在比较之前尝试将它们转换为相同的类型。")])]),a._v(" "),e("h2",{attrs:{id:"_2-baseisnan-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-baseisnan-模块"}},[a._v("#")]),a._v(" 2. baseIsNaN 模块")]),a._v(" "),e("p",[e("strong",[a._v("'isNaN'的基本实现，不支持数字对象")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("baseIsNaN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!==")]),a._v(" value\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" baseIsNaN\n")])])]),e("ul",[e("li",[a._v("重点关注全局属性 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN",target:"_blank",rel:"noopener noreferrer"}},[a._v("NaN"),e("OutboundLink")],1),a._v(", "),e("code",[a._v("NaN")]),a._v(" 的值表示不是一个数字（Not-A-Number）,在现代浏览器中（ES5中）， NaN 属性是一个不可配置（non-configurable），不可写（non-writable）的属性")]),a._v(" "),e("li",[a._v("在执行自比较之中：NaN，也只有NaN，比较之中不等于它自己，"),e("code",[a._v("NaN === NaN; // false")])])]),a._v(" "),e("h2",{attrs:{id:"_3-basefindindex-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-basefindindex-模块"}},[a._v("#")]),a._v(" 3. baseFindIndex 模块")]),a._v(" "),e("p",[e("strong",[a._v("'findIndex'和'findLastIndex'的基本实现")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate 每次迭代调用的函数\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("baseFindIndex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" predicate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fromIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fromRight")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" length "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" array\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" index "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" fromIndex "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("fromRight "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("fromRight "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" index"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("index "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("predicate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" index\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" baseFindIndex\n")])])]),e("ul",[e("li",[a._v("重点关注 "),e("code",[a._v("index = fromIndex + (fromRight ? 1 : -1)")]),a._v(" ，由于支持从右向左的迭代，起始"),e("code",[a._v("index")]),a._v("应该"),e("code",[a._v("+1")]),a._v("以防止"),e("code",[a._v("index--")]),a._v("越过"),e("code",[a._v("0")]),a._v("从而进入死循环，同理从左侧查起要确保查到"),e("code",[a._v("array[0]")]),a._v("从而起始 "),e("code",[a._v("index")]),a._v(" 需要加一")])]),a._v(" "),e("h2",{attrs:{id:"_4-baseindexof-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-baseindexof-模块"}},[a._v("#")]),a._v(" 4. baseIndexOf 模块")]),a._v(" "),e("p",[e("strong",[a._v("没有"),e("code",[a._v("fromIndex")]),a._v("边界检查的"),e("code",[a._v("indexOf")]),a._v("的基本实现")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" baseFindIndex "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./baseFindIndex.js'")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" baseIsNaN "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./baseIsNaN.js'")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" strictIndexOf "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./strictIndexOf.js'")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("baseIndexOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fromIndex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" value\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("strictIndexOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fromIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("baseFindIndex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" baseIsNaN"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" fromIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" baseIndexOf\n")])])]),e("ul",[e("li",[e("code",[a._v("value")]),a._v(" 如果不是 "),e("code",[a._v("NaN")]),a._v("，进入 "),e("code",[a._v("strictIndexOf")]),a._v("，从 "),e("code",[a._v("array[fromIndex]")]),a._v(" 开始按序严格比较是否与 "),e("code",[a._v("value")]),a._v(" 相等，若相等返回对应 "),e("code",[a._v("index")]),a._v("，否则返回 "),e("code",[a._v("-1")])]),a._v(" "),e("li",[e("code",[a._v("value")]),a._v(" 如果是 "),e("code",[a._v("NaN")]),a._v("，进入 "),e("code",[a._v("baseFindIndex")]),a._v("，将 "),e("code",[a._v("baseIsNaN")]),a._v(" 作为 "),e("code",[a._v("baseFindIndex")]),a._v(" 的入参迭代函数 "),e("code",[a._v("predicate")]),a._v(" 并开始从 "),e("code",[a._v("array[fromIndex]")]),a._v(" 开始判断是否为 "),e("code",[a._v("NaN")]),a._v("，若找到 "),e("code",[a._v("NaN")]),a._v(" 就返回对应 "),e("code",[a._v("index")]),a._v("，否则返回 "),e("code",[a._v("-1")])])]),a._v(" "),e("p",[a._v("Tips：可以看到 "),e("code",[a._v("baseFindIndex")]),a._v(" 模块中的有些形参是没有用到的，比如查找时是按照从左往右的顺序查找，并没有传入 "),e("code",[a._v("fromRight")]),a._v("，但提前占了坑，体现了很好的扩展性🐶")]),a._v(" "),e("h2",{attrs:{id:"_5-arrayincludes-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-arrayincludes-模块"}},[a._v("#")]),a._v(" 5. arrayIncludes 模块")]),a._v(" "),e("p",[e("strong",[a._v("不支持从数组指定位置搜索的includes")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" baseIndexOf "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./baseIndexOf.js'")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("arrayIncludes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" length "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" array "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("baseIndexOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" arrayIncludes\n")])])]),e("ul",[e("li",[a._v("如果 length 不存在（包含null、0）或者没有找到 index 都会返回false")])]),a._v(" "),e("p",[a._v("Tips："),e("code",[a._v("!!")]),a._v(" 运算符表示逻辑非的取反运算，如"),e("code",[a._v("!!obj")]),a._v("与 "),e("code",[a._v('obj != null && typeof obj === undefined && obj != "" && obj != false')]),a._v(" 在计算上等价")])])}),[],!1,null,null,null);t.default=n.exports}}]);