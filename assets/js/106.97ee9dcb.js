(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{499:function(a,t,v){"use strict";v.r(t);var _=v(28),n=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[a._v("#")]),a._v(" 数据结构")]),a._v(" "),v("h2",{attrs:{id:"选择-10x2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#选择-10x2"}},[a._v("#")]),a._v(" 选择 10X2")]),a._v(" "),v("p",[a._v("1. 时间复杂度相关知识\n[A]O（n）执行时间一定小于O（n^2）\n[B]计算时间复杂度主要是根据循环和递归\n......")]),a._v(" "),v("p",[a._v("2. 线性表相关知识\n[A]")]),a._v(" "),v("p",[a._v("3. 对称矩阵为压缩矩阵，第一个元素在A[1,1]则A[8,5]为第几个元素")]),a._v(" "),v("p",[a._v("4. 一个二叉树有20个度为2的结点，10个度为1的结点，则有多少个度为0的结点")]),a._v(" "),v("p",[a._v("5. 【1，2，3，4，5，6】的出栈次序不可能为")]),a._v(" "),v("p",[a._v("6. 一个非连通图有6个顶点，则其最多有多少个边")]),a._v(" "),v("p",[a._v("7. AOE、AOV边和节点的意义是什么")]),a._v(" "),v("p",[a._v("8. B-树和B+树的性质\n[A]均有n/2个子树\n[B]B-树有n+1个结点\n[C]B+树有n个结点\n[D]均解决了二叉排序树不平衡问题")]),a._v(" "),v("p",[a._v("9. 快速排序最差情况下的时间复杂度是")]),a._v(" "),v("p",[a._v("10.")]),a._v(" "),v("h2",{attrs:{id:"简答-5x4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简答-5x4"}},[a._v("#")]),a._v(" 简答 5X4")]),a._v(" "),v("p",[a._v("1. 三组数据分别使用三个顺序堆、三个链堆、一个顺序共享堆存储有什么优缺点")]),a._v(" "),v("p",[a._v("2. 什么是单元最短路径，简述Dijkstra算法工作原理")]),a._v(" "),v("p",[a._v("3. 二叉排序树相比于顺序表操作上的优缺点")]),a._v(" "),v("p",[a._v("4. 什么是大顶堆积，如何做大顶堆积")]),a._v(" "),v("h2",{attrs:{id:"综合-5x4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#综合-5x4"}},[a._v("#")]),a._v(" 综合 5X4")]),a._v(" "),v("p",[a._v("1. 写一段C语言代码，实现向一个双向循环链表头指针指向的第一个结点前插入一个结点")]),a._v(" "),v("p",[a._v("2. 给定一段程序（借助栈+队列实现回文字符串判断，先入队入栈，后出队出栈、判断两者下标对应字符是否相等），说明它的功能，说明他是如何实现这个功能")]),a._v(" "),v("p",[a._v("3. 画出ABC三个节点使用中序遍历得到BAC的所有情况")]),a._v(" "),v("p",[a._v("4. 画出使用线性探测再散列生成的散列表【13,22,88,12,38,21,19】，分析查找33未命中需要访问几次散列表")]),a._v(" "),v("h2",{attrs:{id:"代码-15x1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码-15x1"}},[a._v("#")]),a._v(" 代码 15X1")]),a._v(" "),v("p",[a._v("后序非递归遍历一个二叉树，每打印一个节点按行输出对应的结点和层高，中间用空格分开")]),a._v(" "),v("h1",{attrs:{id:"c语言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#c语言"}},[a._v("#")]),a._v(" C语言")]),a._v(" "),v("h2",{attrs:{id:"选择-2x10"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#选择-2x10"}},[a._v("#")]),a._v(" 选择 2X10")]),a._v(" "),v("p",[a._v("1. 命名规范的字符\n[A] 1bda和ida\n[B] _123和ident\n[C] uw&jw和ida\n[d] %hd和hsgje")]),a._v(" "),v("p",[a._v("2. d1和d2是整形则'x' + d1 * d2 + 1.0的输出类型是\n[A]int\n[B]float\n[C]double\n[D]char")]),a._v(" "),v("p",[a._v("3. 1< n <=10用C语言表示应该是\n[A] n > 1 && n <=10")]),a._v(" "),v("p",[a._v('4. int a; *pa = &a ;则正确的打印语句是\n[A]scanf("d%", pa)\n[B]scanf("d%", a)')]),a._v(" "),v("p",[a._v("5. 返回值类型由谁确认\n[A] 声明函数时的类型\n[B] 函数返回值的类型")]),a._v(" "),v("p",[a._v("6. fun(arg1, arg2+arg3, (arg4, arg5))的实参个数")]),a._v(" "),v("p",[a._v('7. char str[] = "Hello"; char *ptr=str;\n[A] str、ptr含义相同\n[B] str===ptr为真\n[C] sizeof(str) = sizeof(ptr)\n[D] strle(str) = strle(ptr)')]),a._v(" "),v("p",[a._v("8. int a[] = {1,2,3,4,5,6}; *p = a; 下列取值为3的是\n[A] p+=2, ++*p;\n[B] p+=3, *p++;\n[C] p+=2, *++p;\n[D] p+=2, *(p++)")]),a._v(" "),v("p",[a._v("9. 结构体变量分配空间大小的依据\n[A] 结构体所有类型和的大小\n[B] 结构体中最大类型的大小")]),a._v(" "),v("p",[a._v("10. 文件操作正确的是\n[A]打开前测试是否已打开")]),a._v(" "),v("h2",{attrs:{id:"综合题-5x4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#综合题-5x4"}},[a._v("#")]),a._v(" 综合题 5X4")]),a._v(" "),v("p",[a._v("1. 给定一段函数，改写成while形式\nfor(i=1,j=50;i < j; i++,j--)")]),a._v(" "),v("p",[a._v("2. 声明double变量d1；\n声明double类型指针，初始化时指向d1；\n声明长度为5的数组；\n声明长度为5且指向double类型指针的数组；\n声明一个double类型的函数指针，有一个double类型的参数")]),a._v(" "),v("p",[a._v("3. 声明一个结构体Student\n参数一：整型的学号no；\n参数二：字符串的姓名name，长度为20；\n参数三：date的生日birthday，包含year、month、day三个")]),a._v(" "),v("p",[a._v("4. 文件读写采用二进制与文本格式的优缺点")]),a._v(" "),v("h2",{attrs:{id:"代码-15x1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码-15x1-2"}},[a._v("#")]),a._v(" 代码 15X1")]),a._v(" "),v("p",[a._v("使用C语言编写一段代码，计算一个数组中最大的三个数与最小的三个数差值，数组长度小于三则返回0")]),a._v(" "),v("h2",{attrs:{id:"代码-20x1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码-20x1"}},[a._v("#")]),a._v(" 代码 20X1")]),a._v(" "),v("p",[a._v("使用C语言编写一个单词词频统计函数，\n【1】如果文件打不开需要输出XXX\n【2】文件打开没有文件或者格式不规范输出XXX\n【3】限制字符串长度小于20，频率不超过2000，使用任意非字符作为分隔，如a%ab*jbsh，则a频率为2，ab频率为1，按行输出")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("a 2\nab 1\n")])])]),v("p",[a._v("若频率相同，则按照字母在字母表中的次序按序排列")])])}),[],!1,null,null,null);t.default=n.exports}}]);