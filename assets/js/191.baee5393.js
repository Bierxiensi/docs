(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{617:function(_,v,o){"use strict";o.r(v);var e=o(28),r=Object(e.a)({},(function(){var _=this,v=_.$createElement,o=_._self._c||v;return o("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[o("h2",{attrs:{id:"命令式和声明式"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#命令式和声明式"}},[_._v("#")]),_._v(" 命令式和声明式")]),_._v(" "),o("p",[o("strong",[_._v("命令式")])]),_._v(" "),o("ul",[o("li",[_._v("关注过程")]),_._v(" "),o("li",[_._v("性能佳")]),_._v(" "),o("li",[_._v("不易维护（"),o("code",[_._v("维护实现过程因而心智负担大")]),_._v("）")])]),_._v(" "),o("p",[o("strong",[_._v("声明式")])]),_._v(" "),o("ul",[o("li",[_._v("关注结果")]),_._v(" "),o("li",[_._v("性能"),o("code",[_._v("不优于")]),_._v("命令式编程")]),_._v(" "),o("li",[_._v("易维护")])]),_._v(" "),o("p",[_._v("====》框架要做的\n"),o("strong",[_._v("框架"),o("code",[_._v("封装了命令式代码")]),_._v("从而实现了面向程序员的声明式，从而使的程序更易于维护扩展")]),_._v("\n如果更新一段代码，命令式的性能消耗为命令式更新A，对应声明式的新能消耗为找出差异B + 命令式更新A，从而一个优秀的框架要做的就是"),o("code",[_._v("让声明式代码逼近命令式代码")]),_._v("的性能，重点在于缩小"),o("code",[_._v("找出差异")]),_._v("的性能开销")]),_._v(" "),o("p",[_._v("====》最小化"),o("code",[_._v("找出差异")]),_._v("的性能开销的过程中探索出了 "),o("code",[_._v("虚拟dom")]),_._v(" 方案")]),_._v(" "),o("h2",{attrs:{id:"虚拟dom"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[_._v("#")]),_._v(" 虚拟dom")]),_._v(" "),o("p",[o("strong",[_._v("虽然理论上性能不高于原生dom操作，但是很难写出并维护最优的命令式代码")])]),_._v(" "),o("ul",[o("li",[_._v("（一般而言）创建时性能开销并不优于原生操作，甚至更差（源于创建真实dom的同时还有创建对应VNode结点的性能开销）")]),_._v(" "),o("li",[_._v("纯js层面操作比dom操作快很多，不在一个数量级，因此在更新时原生操作性能开销（一般而言，特别是针对innerHtml操作）远大于虚拟dom")]),_._v(" "),o("li",[_._v("理论上性能弱于极致优化的原生js（能做到原子级别的更新），但在保证心智负担和可维护性上性能还不错")])]),_._v(" "),o("h2",{attrs:{id:"运行时和编译时"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#运行时和编译时"}},[_._v("#")]),_._v(" 运行时和编译时")]),_._v(" "),o("p",[o("strong",[_._v("运行时")])]),_._v(" "),o("ul",[o("li",[_._v("无法分析用户输入内容进而做编译优化")])]),_._v(" "),o("p",[o("strong",[_._v("编译时")])]),_._v(" "),o("ul",[o("li",[_._v("灵活性不足，用户输入内容必须编译后才能使用")])]),_._v(" "),o("h2",{attrs:{id:"如何刚好的设计面向用户的框架"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#如何刚好的设计面向用户的框架"}},[_._v("#")]),_._v(" 如何刚好的设计面向用户的框架")]),_._v(" "),o("p",[o("strong",[_._v("提升开发体验")])]),_._v(" "),o("ul",[o("li",[_._v("清晰丰富的"),o("code",[_._v("warning")]),_._v("信息")]),_._v(" "),o("li",[_._v("直观的数据打印，如借助"),o("code",[_._v("chrome")]),_._v("浏览器"),o("code",[_._v("DevTools")]),_._v("的"),o("code",[_._v("formatter")]),_._v("（Vue中的initCustomFormatter）")])]),_._v(" "),o("p",[o("strong",[_._v("控制代码体积")])]),_._v(" "),o("ul",[o("li",[_._v("使用开关（Vue中的__DEV__）控制打包出的版本，如一些"),o("code",[_._v("warning")]),_._v("信息可不包含在生产环境包（.prod.js）中")])]),_._v(" "),o("p",[o("strong",[_._v("良好的Tree-Shaking")])]),_._v(" "),o("ul",[o("li",[_._v("模块必须是"),o("code",[_._v("ESM")]),_._v("（ES Module），"),o("code",[_._v("Tree-Shaking")]),_._v("依赖"),o("code",[_._v("ESM")]),_._v("静态结构")]),_._v(" "),o("li",[o("code",[_._v("Tree-Shaking")]),_._v("只会筛掉"),o("code",[_._v("dead code")]),_._v("，不会筛掉产生副作用的函数，因而要擅于使用无副作用声明机制，如rollup中的"),o("code",[_._v("/*#__PURE__*/")]),_._v("注释")])]),_._v(" "),o("p",[o("strong",[_._v("框架的输出产物")])]),_._v(" "),o("ul",[o("li",[_._v("为了支持浏览器端"),o("code",[_._v("<script>")]),_._v("标签引入，打包产物应为"),o("code",[_._v("IIFE")]),_._v("，在"),o("code",[_._v("rollup")]),_._v("中配置"),o("code",[_._v("format: iife")])]),_._v(" "),o("li",[_._v("在浏览器支持"),o("code",[_._v("ESM")]),_._v("情形下，在"),o("code",[_._v("rollup")]),_._v("中需要配置为"),o("code",[_._v("format: esm")])]),_._v(" "),o("li",[_._v("为了支持node，打包产物应为"),o("code",[_._v("cjs")]),_._v("模块资源，在"),o("code",[_._v("rollup")]),_._v("中需要配置"),o("code",[_._v("format: cjs")])]),_._v(" "),o("li",[o("code",[_._v("-bundler.js")]),_._v("一般为打包工具使用资源，"),o("code",[_._v("-browser.js")]),_._v("一般为提供给浏览器使用资源，区别在于特性开关的控制，其中打包工具一般使用"),o("code",[_._v("process.env.NODE_ENV === 'production'")]),_._v("来判断所处环境，而特性开关由开发者控制")])]),_._v(" "),o("p",[o("strong",[_._v("特性开关")])]),_._v(" "),o("ul",[o("li",[_._v("一般以下划线链接大写字母命名，如"),o("code",[_._v("vue")]),_._v("中"),o("code",[_._v("__DEV__")])])]),_._v(" "),o("p",[o("strong",[_._v("错误处理")])]),_._v(" "),o("ul",[o("li",[_._v("统一的错误处理函数，如"),o("code",[_._v("vue")]),_._v("中的"),o("code",[_._v("registerErrorHandler")]),_._v("函数（思考所采用的设计模式）")])]),_._v(" "),o("p",[o("strong",[_._v("Typescript类型支持")])])])}),[],!1,null,null,null);v.default=r.exports}}]);